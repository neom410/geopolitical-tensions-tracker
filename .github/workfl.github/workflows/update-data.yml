name: Update Geopolitical Tensions Data

on:
  schedule:
    # Esegui ogni 6 ore
    - cron: '0 */6 * * *'
  workflow_dispatch: # Permetti esecuzione manuale

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create directories
      run: |
        mkdir -p data/raw
        mkdir -p data/processed
        
    - name: Collect news data
      run: |
        cd src/collectors
        python news_collector.py
        
    - name: Process data
      run: |
        cd src/processors
        python data_processor.py
        
    - name: Generate summary report
      run: |
        python -c "
        import pandas as pd
        from datetime import datetime
        
        # Carica i dati
        try:
            countries = pd.read_csv('data/processed/country_summary_latest.csv')
            articles = pd.read_csv('data/processed/articles_latest.csv')
            
            # Genera report
            report = f'''# Geopolitical Tensions Report - {datetime.now().strftime('%Y-%m-%d %H:%M')}
            
## Summary
- Total articles analyzed: {len(articles)}
- Countries monitored: {len(countries)}
- Average global tension: {articles['enhanced_tension_score'].mean():.2f}/10
- Peak tension: {articles['enhanced_tension_score'].max():.2f}/10

## Top 5 Countries by Tension Level
'''
            
            for _, row in countries.head(5).iterrows():
                report += f'- **{row['country']}**: {row['avg_tension']:.2f}/10 ({row['article_count']} articles)\\n'
            
            report += f'''
## Data Sources
- Reuters, BBC, AP News, Deutsche Welle, France24, Al Jazeera
- Last update: {datetime.now().strftime('%Y-%m-%d %H:%M UTC')}
'''
            
            # Salva il report
            with open('README.md', 'w') as f:
                f.write(report)
                
            print('Report generated successfully')
        except Exception as e:
            print(f'Error generating report: {e}')
        "
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --staged --quiet || git commit -m "Update geopolitical tensions data - $(date)"
        git push
        
    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: tension-data
        path: |
          data/processed/
          README.md
        retention-days: 7
